@mixin linear-gradient($direction, $color-stops...) {
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

@mixin transition($args) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@function calculateRem($size) { 
  $remSize: $size / 10px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}


@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}


@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}


@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}


@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: block;
  }
}

.clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}


@mixin ellipsis(
    $width: 100%,
    $display: inline-block
  ) {
  display: $display;
  max-width: $width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}


@mixin hide-text {
  overflow: hidden;
  text-indent: 101%;
  white-space: nowrap;
  display: block;
}


@mixin hide-visually($toggle: hide) {
  @if $toggle == "hide" {
    border: 0;
    clip: rect(1px, 1px, 1px, 1px);
    clip-path: circle(1% at 1% 1%);
    height: 1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
  } @else if $toggle == "unhide" {
    clip: auto;
    clip-path: none;
    height: auto;
    overflow: visible;
    position: static;
    width: auto;
  }
}



@mixin word-wrap($wrap: break-word) {
  overflow-wrap: $wrap;
  word-wrap: $wrap;

  @if $wrap == break-word {
    word-break: break-all;
  } @else {
    word-break: $wrap;
  }
}


@mixin box-sizing($args...){
  -webkit-box-sizing: $args;
  -moz-box-sizing: $args;
  box-sizing: $args;
}



/*********************
BREAKPOINTS (desktop first)
*********************/

@mixin breakpoint($point) {
  @if $point == laptop {
    @media (max-width: 1200px) {
      @content;
    }
  }
  @else if $point == laptoponly {
    @media (max-width: 1200px) and (min-width: 992px) {
      @content;
    }
  }
  @else if $point == tablet {
    @media (max-width: 992px) {
      @content;
    }
  }
  @else if $point == tabletonly {
    @media (max-width: 992px) and (min-width: 768px) {
      @content;
    }
  }
  @else if $point == phablet {
    @media (max-width: 768px) {
      @content;
    }
  }
  @else if $point == phabletonly {
    @media (max-width: 768px) and (min-width: 480px) {
      @content;
    }
  }
  @else if $point == mobile {
    @media (max-width: 480px) {
      @content;
    }
  } @else {
    @media (max-width: $point) {
      @content;
    }
  }
}
